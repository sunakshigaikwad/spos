import java.util.*;

class SJFP {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter number of processes: ");
        int n = sc.nextInt();

        int[] burstTime = new int[n];
        int[] remainingTime = new int[n];
        int[] waitingTime = new int[n];
        int[] turnaroundTime = new int[n];
        int[] arrivalTime = new int[n];
        
        System.out.println("Enter burst times:");
        for (int i = 0; i < n; i++) {
            System.out.print("P" + (i + 1) + ": ");
            burstTime[i] = sc.nextInt();
            remainingTime[i] = burstTime[i];
            arrivalTime[i] = 0;
        }

        int totalWait = 0, totalTAT = 0;
        int time = 0, completed = 0;
        
        while (completed < n) {
            int minIndex = -1;
            int minBurstTime = Integer.MAX_VALUE;

            for (int i = 0; i < n; i++) {
                if (remainingTime[i] > 0 && remainingTime[i] < minBurstTime) {
                    minBurstTime = remainingTime[i];
                    minIndex = i;
                }
            }

            remainingTime[minIndex]--;

            if (remainingTime[minIndex] == 0) {
                completed++;
                int endTime = time + 1;
                turnaroundTime[minIndex] = endTime;
                waitingTime[minIndex] = turnaroundTime[minIndex] - burstTime[minIndex];
                totalWait += waitingTime[minIndex];
                totalTAT += turnaroundTime[minIndex];
            }
            time++;
        }

        System.out.println("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time");
        for (int i = 0; i < n; i++) {
            System.out.println("P" + (i + 1) + "\t" + burstTime[i] + "\t\t" + waitingTime[i] + "\t\t" + turnaroundTime[i]);
        }

        System.out.println("\nAverage Waiting Time: " + (float) totalWait / n);
        System.out.println("Average Turnaround Time: " + (float) totalTAT / n);
    }
}
